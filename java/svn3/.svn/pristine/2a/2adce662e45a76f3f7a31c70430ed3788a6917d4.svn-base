Скрипт сборки: javac вызывается без указания classpath, поэтому компиляция не проходит, т.к.
не находятся классы из electroapi.jar.

В Java принято именовать методы с маленькой буквы, а классы - с большой.

Вызов конструктора String почти всегда не нужен. Например, он не нужен здесь: new String("")

Неэффективно в цикле прибавлять к строке символы. Помните, что строки неизменяемы, и каждая конкатенация
включает в себя создание StringBuilder'а, выполнение операции над ним, а затем преобразование результата в строку?
В методах ReadWholeUnitFromHere и ReadWholeNumberFromHere было бы лучше найти начальный и конечный индексы,
а затем взять substring.

В условиях вроде "!IsSpacer(problemText.charAt(i)) && i < problemText.length()" сначала надо проверять
текущий индекс, а уже затем вызывать charAt. А в текущем виде проверка "i < problemText.length()" выполняется после
обращения к символу по индексу. В итоге почти все запуски solve приводят к StringIndexOutOfBoundsException.
А в тех редких случаях, когда исключение не вылетает, ответ вычисляется неверно.

Метод solve необъятен, логика его очень запутана. Надо было как-то его логически поделить на части
и выражаться немного яснее.

Нет необходимости изначально заполнять массив allWeKnow странными значениями.
null вполне ясно обозначает отсутствие значения.

Условие "if(symbolsPresent[i] == false)" обычно записывают как "if(!symbolsPresent[i])".

Везде, где использован тип char, уместнее выглядело бы использование ElectricQuantityType.

В программе есть цикл while с пустым телом, в который мы по счастливой случайности никогда не входим.
Если бы вошли, то остались бы там навсегда.


Оценка: 4 из 10
